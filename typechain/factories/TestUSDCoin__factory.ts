/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestUSDCoin, TestUSDCoinInterface } from "../TestUSDCoin";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "faucet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040527f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9610120523480156200003757600080fd5b50604051806040016040528060088152602001672aa9a21021b7b4b760c11b81525080604051806040016040528060018152602001603160f81b815250604051806040016040528060088152602001672aa9a21021b7b4b760c11b815250604051806040016040528060048152602001635553444360e01b8152508160039080519060200190620000ca92919062000174565b508051620000e090600490602084019062000174565b5050825160209384012082519284019290922060c083815260e08290524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818a018190528183019890985260608101959095526080808601939093523085830152805180860390920182529390920190925280519401939093209092526101005250620002579050565b82805462000182906200021a565b90600052602060002090601f016020900481019282620001a65760008555620001f1565b82601f10620001c157805160ff1916838001178555620001f1565b82800160010185558215620001f1579182015b82811115620001f1578251825591602001919060010190620001d4565b50620001ff92915062000203565b5090565b5b80821115620001ff576000815560010162000204565b600181811c908216806200022f57607f821691505b602082108114156200025157634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e051610100516101205161108c620002a760003960006105250152600061096c015260006109bb015260006109960152600061091a01526000610943015261108c6000f3fe608060405234801561001057600080fd5b50600436106100d05760003560e01c806306fdde03146100d5578063095ea7b3146100f357806318160ddd1461011657806323b872dd14610128578063313ce5671461013b5780633644e5151461014a578063395093511461015257806354fd4d5014610165578063579158971461018257806370a08231146101975780637ecebe00146101c057806395d89b41146101d3578063a457c2d7146101db578063a9059cbb146101ee578063d505accf14610201578063dd62ed3e14610214575b600080fd5b6100dd61024d565b6040516100ea9190610f70565b60405180910390f35b610106610101366004610f2d565b6102df565b60405190151581526020016100ea565b6002545b6040519081526020016100ea565b610106610136366004610e7e565b6102f5565b604051600681526020016100ea565b61011a6103a4565b610106610160366004610f2d565b6103b3565b6040805180820190915260018152603160f81b60208201526100dd565b610195610190366004610f57565b6103ef565b005b61011a6101a5366004610e29565b6001600160a01b031660009081526020819052604090205490565b61011a6101ce366004610e29565b6103fc565b6100dd61041c565b6101066101e9366004610f2d565b61042b565b6101066101fc366004610f2d565b6104c4565b61019561020f366004610eba565b6104d1565b61011a610222366004610e4b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461025c90610feb565b80601f016020809104026020016040519081016040528092919081815260200182805461028890610feb565b80156102d55780601f106102aa576101008083540402835291602001916102d5565b820191906000526020600020905b8154815290600101906020018083116102b857829003601f168201915b5050505050905090565b60006102ec338484610635565b50600192915050565b6000610302848484610759565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561038c5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103998533858403610635565b506001949350505050565b60006103ae610916565b905090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916102ec9185906103ea908690610fc5565b610635565b6103f93382610a09565b50565b6001600160a01b0381166000908152600560205260408120545b92915050565b60606004805461025c90610feb565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104ad5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610383565b6104ba3385858403610635565b5060019392505050565b60006102ec338484610759565b834211156105215760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610383565b60007f00000000000000000000000000000000000000000000000000000000000000008888886105508c610ad6565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006105ab82610afe565b905060006105bb82878787610b4c565b9050896001600160a01b0316816001600160a01b03161461061e5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610383565b6106298a8a8a610635565b50505050505050505050565b6001600160a01b0383166106975760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610383565b6001600160a01b0382166106f85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610383565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166107bd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610383565b6001600160a01b03821661081f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610383565b6001600160a01b038316600090815260208190526040902054818110156108975760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610383565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108ce908490610fc5565b92505081905550826001600160a01b0316846001600160a01b03166000805160206110378339815191528460405161090891815260200190565b60405180910390a350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046141561096557507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038216610a5f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610383565b8060026000828254610a719190610fc5565b90915550506001600160a01b03821660009081526020819052604081208054839290610a9e908490610fc5565b90915550506040518181526001600160a01b038316906000906000805160206110378339815191529060200160405180910390a35050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b6000610416610b0b610916565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610b5d87878787610b74565b91509150610b6a81610c57565b5095945050505050565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b03831115610ba15750600090506003610c4e565b8460ff16601b14158015610bb957508460ff16601c14155b15610bca5750600090506004610c4e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610c1e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c4757600060019250925050610c4e565b9150600090505b94509492505050565b6000816004811115610c6b57610c6b611020565b1415610c745750565b6001816004811115610c8857610c88611020565b1415610cd15760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610383565b6002816004811115610ce557610ce5611020565b1415610d335760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610383565b6003816004811115610d4757610d47611020565b1415610da05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610383565b6004816004811115610db457610db4611020565b14156103f95760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610383565b80356001600160a01b0381168114610e2457600080fd5b919050565b600060208284031215610e3b57600080fd5b610e4482610e0d565b9392505050565b60008060408385031215610e5e57600080fd5b610e6783610e0d565b9150610e7560208401610e0d565b90509250929050565b600080600060608486031215610e9357600080fd5b610e9c84610e0d565b9250610eaa60208501610e0d565b9150604084013590509250925092565b600080600080600080600060e0888a031215610ed557600080fd5b610ede88610e0d565b9650610eec60208901610e0d565b95506040880135945060608801359350608088013560ff81168114610f1057600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610f4057600080fd5b610f4983610e0d565b946020939093013593505050565b600060208284031215610f6957600080fd5b5035919050565b600060208083528351808285015260005b81811015610f9d57858101830151858201604001528201610f81565b81811115610faf576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610fe657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c90821680610fff57607f821691505b60208210811415610af857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052602160045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e7bddba90b0332de5a4536502466471ecb8d8de608cd22f369c609eff3fd937564736f6c63430008070033";

export class TestUSDCoin__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestUSDCoin> {
    return super.deploy(overrides || {}) as Promise<TestUSDCoin>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestUSDCoin {
    return super.attach(address) as TestUSDCoin;
  }
  connect(signer: Signer): TestUSDCoin__factory {
    return super.connect(signer) as TestUSDCoin__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUSDCoinInterface {
    return new utils.Interface(_abi) as TestUSDCoinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestUSDCoin {
    return new Contract(address, _abi, signerOrProvider) as TestUSDCoin;
  }
}
