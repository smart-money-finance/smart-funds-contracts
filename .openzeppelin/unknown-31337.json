{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xA51c1fc2f0D1a1b8494Ed1FE312d7C3a78Ed91C0",
      "txHash": "0xaf0c364bad4e968d3f88cfe824eeca8ccca8f2e585f4cde3dd858235636fe405",
      "kind": "uups"
    },
    {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0xd9a5cb80c724786984dc48478e05436099a96b38e9b887aff0c153268669a997",
      "kind": "uups"
    },
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xdfec4bfdb9c0a6734118dd74443f69c0d23e89ae4c407d3b450c190abdab9049",
      "kind": "uups"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x4fce7bcd71b18bcf1c5092980fb63dc70a3317a5b78472a541aff3d19ada3047",
      "kind": "uups"
    }
  ],
  "impls": {
    "9a5700fd41fe5fd0d0d38f8a93a733bd48e44f70767623abc529151bb559f3d6": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xf77fbc959296632e783219e8eed8665e484b41c7fa83f67d8ec16554c2047be8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "RegistryV0",
            "label": "usdToken",
            "type": "t_contract(ERC20Permit)4925",
            "src": "contracts/RegistryV0.sol:20"
          },
          {
            "contract": "RegistryV0",
            "label": "latestFundVersion",
            "type": "t_uint256",
            "src": "contracts/RegistryV0.sol:21"
          },
          {
            "contract": "RegistryV0",
            "label": "fundImplementations",
            "type": "t_array(t_contract(FundV0)9304)dyn_storage",
            "src": "contracts/RegistryV0.sol:22"
          },
          {
            "contract": "RegistryV0",
            "label": "funds",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/RegistryV0.sol:23"
          },
          {
            "contract": "RegistryV0",
            "label": "managerWhitelist",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/RegistryV0.sol:25"
          },
          {
            "contract": "RegistryV0",
            "label": "bypassWhitelist",
            "type": "t_bool",
            "src": "contracts/RegistryV0.sol:26"
          },
          {
            "contract": "RegistryV0",
            "label": "managerToFund",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/RegistryV0.sol:27"
          }
        ],
        "types": {
          "t_contract(ERC20Permit)4925": {
            "label": "contract ERC20Permit"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(FundV0)9304)dyn_storage": {
            "label": "contract FundV0[]"
          },
          "t_contract(FundV0)9304": {
            "label": "contract FundV0"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "839dcb30a5128bf2bf0b5300dbb435c30b473bfac57eab908bcc0bc51a01f16f": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x747f28f6f331057cbc1290ba618b843cd6f0fd2379efb2a1a177e3f38ee10c1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:361"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:29"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:111"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_nonces",
            "type": "t_mapping(t_address,t_struct(Counter)2518_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:25"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "_PERMIT_TYPEHASH",
            "type": "t_bytes32",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:28"
          },
          {
            "contract": "ERC20PermitUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/draft-ERC20PermitUpgradeable.sol:93"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_delegates",
            "type": "t_mapping(t_address,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:39"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_checkpoints",
            "type": "t_mapping(t_address,t_array(t_struct(Checkpoint)1329_storage)dyn_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:40"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "_totalSupplyCheckpoints",
            "type": "t_array(t_struct(Checkpoint)1329_storage)dyn_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:41"
          },
          {
            "contract": "ERC20VotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20VotesUpgradeable.sol:262"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:64"
          },
          {
            "contract": "FundV0",
            "label": "_registry",
            "type": "t_contract(RegistryV0)9626",
            "src": "contracts/FundV0.sol:19"
          },
          {
            "contract": "FundV0",
            "label": "_usdToken",
            "type": "t_contract(ERC20Permit)4925",
            "src": "contracts/FundV0.sol:20"
          },
          {
            "contract": "FundV0",
            "label": "_manager",
            "type": "t_address",
            "src": "contracts/FundV0.sol:23"
          },
          {
            "contract": "FundV0",
            "label": "_custodian",
            "type": "t_address",
            "src": "contracts/FundV0.sol:24"
          },
          {
            "contract": "FundV0",
            "label": "_aumUpdater",
            "type": "t_address",
            "src": "contracts/FundV0.sol:25"
          },
          {
            "contract": "FundV0",
            "label": "_feeBeneficiary",
            "type": "t_address",
            "src": "contracts/FundV0.sol:26"
          },
          {
            "contract": "FundV0",
            "label": "_timelock",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:27"
          },
          {
            "contract": "FundV0",
            "label": "_feeSweepInterval",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:28"
          },
          {
            "contract": "FundV0",
            "label": "_managementFee",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:29"
          },
          {
            "contract": "FundV0",
            "label": "_performanceFee",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:30"
          },
          {
            "contract": "FundV0",
            "label": "_maxInvestors",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:31"
          },
          {
            "contract": "FundV0",
            "label": "_maxInvestmentsPerInvestor",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:32"
          },
          {
            "contract": "FundV0",
            "label": "_minInvestmentAmount",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:33"
          },
          {
            "contract": "FundV0",
            "label": "_initialPrice",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:34"
          },
          {
            "contract": "FundV0",
            "label": "_logoUrl",
            "type": "t_string_storage",
            "src": "contracts/FundV0.sol:35"
          },
          {
            "contract": "FundV0",
            "label": "_contactInfo",
            "type": "t_string_storage",
            "src": "contracts/FundV0.sol:36"
          },
          {
            "contract": "FundV0",
            "label": "_tags",
            "type": "t_string_storage",
            "src": "contracts/FundV0.sol:37"
          },
          {
            "contract": "FundV0",
            "label": "_usingUsdToken",
            "type": "t_bool",
            "src": "contracts/FundV0.sol:38"
          },
          {
            "contract": "FundV0",
            "label": "_navs",
            "type": "t_array(t_struct(Nav)5982_storage)dyn_storage",
            "src": "contracts/FundV0.sol:47"
          },
          {
            "contract": "FundV0",
            "label": "_investorInfo",
            "type": "t_mapping(t_address,t_struct(Investor)6010_storage)",
            "src": "contracts/FundV0.sol:63"
          },
          {
            "contract": "FundV0",
            "label": "_investors",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/FundV0.sol:64"
          },
          {
            "contract": "FundV0",
            "label": "_investorCount",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:65"
          },
          {
            "contract": "FundV0",
            "label": "_investments",
            "type": "t_array(t_struct(Investment)6076_storage)dyn_storage",
            "src": "contracts/FundV0.sol:98"
          },
          {
            "contract": "FundV0",
            "label": "_activeInvestmentCount",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:99"
          },
          {
            "contract": "FundV0",
            "label": "_doneImportingInvestments",
            "type": "t_bool",
            "src": "contracts/FundV0.sol:100"
          },
          {
            "contract": "FundV0",
            "label": "_feeSweeps",
            "type": "t_array(t_struct(FeeSweep)6125_storage)dyn_storage",
            "src": "contracts/FundV0.sol:126"
          },
          {
            "contract": "FundV0",
            "label": "_lastFeeSweepEndedTimestamp",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:127"
          },
          {
            "contract": "FundV0",
            "label": "_investmentsSweptSinceStarted",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:128"
          },
          {
            "contract": "FundV0",
            "label": "_feeSweeping",
            "type": "t_bool",
            "src": "contracts/FundV0.sol:129"
          },
          {
            "contract": "FundV0",
            "label": "_feeWithdrawals",
            "type": "t_array(t_struct(FeeWithdrawal)6168_storage)dyn_storage",
            "src": "contracts/FundV0.sol:150"
          },
          {
            "contract": "FundV0",
            "label": "_feesSweptNotWithdrawn",
            "type": "t_uint256",
            "src": "contracts/FundV0.sol:151"
          },
          {
            "contract": "FundV0",
            "label": "_investmentRequests",
            "type": "t_array(t_struct(InvestmentRequest)6201_storage)dyn_storage",
            "src": "contracts/FundV0.sol:169"
          },
          {
            "contract": "FundV0",
            "label": "_redemptionRequests",
            "type": "t_array(t_struct(RedemptionRequest)6236_storage)dyn_storage",
            "src": "contracts/FundV0.sol:190"
          },
          {
            "contract": "FundV0",
            "label": "_redemptions",
            "type": "t_array(t_struct(Redemption)6273_storage)dyn_storage",
            "src": "contracts/FundV0.sol:212"
          },
          {
            "contract": "FundV0",
            "label": "_closed",
            "type": "t_bool",
            "src": "contracts/FundV0.sol:223"
          }
        ],
        "types": {
          "t_contract(RegistryV0)9626": {
            "label": "contract RegistryV0"
          },
          "t_contract(ERC20Permit)4925": {
            "label": "contract ERC20Permit"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(Nav)5982_storage)dyn_storage": {
            "label": "struct FundV0.Nav[]"
          },
          "t_struct(Nav)5982_storage": {
            "label": "struct FundV0.Nav",
            "members": [
              {
                "label": "aum",
                "type": "t_uint256"
              },
              {
                "label": "supply",
                "type": "t_uint256"
              },
              {
                "label": "totalCapitalContributed",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "ipfsHash",
                "type": "t_string_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Investor)6010_storage)": {
            "label": "mapping(address => struct FundV0.Investor)"
          },
          "t_struct(Investor)6010_storage": {
            "label": "struct FundV0.Investor",
            "members": [
              {
                "label": "whitelisted",
                "type": "t_bool"
              },
              {
                "label": "investorId",
                "type": "t_uint256"
              },
              {
                "label": "activeInvestmentCount",
                "type": "t_uint256"
              },
              {
                "label": "investmentRequestId",
                "type": "t_uint256"
              },
              {
                "label": "investmentIds",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_struct(Investment)6076_storage)dyn_storage": {
            "label": "struct FundV0.Investment[]"
          },
          "t_struct(Investment)6076_storage": {
            "label": "struct FundV0.Investment",
            "members": [
              {
                "label": "constants",
                "type": "t_struct(InvestmentConstants)6051_storage"
              },
              {
                "label": "remainingFundAmount",
                "type": "t_uint256"
              },
              {
                "label": "usdManagementFeesSwept",
                "type": "t_uint256"
              },
              {
                "label": "usdPerformanceFeesSwept",
                "type": "t_uint256"
              },
              {
                "label": "fundManagementFeesSwept",
                "type": "t_uint256"
              },
              {
                "label": "fundPerformanceFeesSwept",
                "type": "t_uint256"
              },
              {
                "label": "highWaterMark",
                "type": "t_uint256"
              },
              {
                "label": "feeSweepIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "feeSweepsCount",
                "type": "t_uint256"
              },
              {
                "label": "redemptionRequestId",
                "type": "t_uint256"
              },
              {
                "label": "redemptionId",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(InvestmentConstants)6051_storage": {
            "label": "struct FundV0.InvestmentConstants",
            "members": [
              {
                "label": "investor",
                "type": "t_address"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "lockupTimestamp",
                "type": "t_uint256"
              },
              {
                "label": "initialUsdAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialFundAmount",
                "type": "t_uint256"
              },
              {
                "label": "initialHighWaterMark",
                "type": "t_uint256"
              },
              {
                "label": "managementFeeCostBasis",
                "type": "t_uint256"
              },
              {
                "label": "investmentRequestId",
                "type": "t_uint256"
              },
              {
                "label": "usdTransferred",
                "type": "t_bool"
              },
              {
                "label": "imported",
                "type": "t_bool"
              },
              {
                "label": "notes",
                "type": "t_string_storage"
              }
            ]
          },
          "t_array(t_struct(FeeSweep)6125_storage)dyn_storage": {
            "label": "struct FundV0.FeeSweep[]"
          },
          "t_struct(FeeSweep)6125_storage": {
            "label": "struct FundV0.FeeSweep",
            "members": [
              {
                "label": "investmentId",
                "type": "t_uint256"
              },
              {
                "label": "highWaterMark",
                "type": "t_uint256"
              },
              {
                "label": "usdManagementFee",
                "type": "t_uint256"
              },
              {
                "label": "usdPerformanceFee",
                "type": "t_uint256"
              },
              {
                "label": "fundManagementFee",
                "type": "t_uint256"
              },
              {
                "label": "fundPerformanceFee",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(FeeWithdrawal)6168_storage)dyn_storage": {
            "label": "struct FundV0.FeeWithdrawal[]"
          },
          "t_struct(FeeWithdrawal)6168_storage": {
            "label": "struct FundV0.FeeWithdrawal",
            "members": [
              {
                "label": "to",
                "type": "t_address"
              },
              {
                "label": "fundAmount",
                "type": "t_uint256"
              },
              {
                "label": "usdAmount",
                "type": "t_uint256"
              },
              {
                "label": "usdTransferred",
                "type": "t_bool"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(InvestmentRequest)6201_storage)dyn_storage": {
            "label": "struct FundV0.InvestmentRequest[]"
          },
          "t_struct(InvestmentRequest)6201_storage": {
            "label": "struct FundV0.InvestmentRequest",
            "members": [
              {
                "label": "investor",
                "type": "t_address"
              },
              {
                "label": "usdAmount",
                "type": "t_uint256"
              },
              {
                "label": "minFundAmount",
                "type": "t_uint256"
              },
              {
                "label": "maxFundAmount",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "investmentId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(RedemptionRequest)6236_storage)dyn_storage": {
            "label": "struct FundV0.RedemptionRequest[]"
          },
          "t_struct(RedemptionRequest)6236_storage": {
            "label": "struct FundV0.RedemptionRequest",
            "members": [
              {
                "label": "investmentId",
                "type": "t_uint256"
              },
              {
                "label": "minUsdAmount",
                "type": "t_uint256"
              },
              {
                "label": "deadline",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "redemptionId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(Redemption)6273_storage)dyn_storage": {
            "label": "struct FundV0.Redemption[]"
          },
          "t_struct(Redemption)6273_storage": {
            "label": "struct FundV0.Redemption",
            "members": [
              {
                "label": "investmentId",
                "type": "t_uint256"
              },
              {
                "label": "redemptionRequestId",
                "type": "t_uint256"
              },
              {
                "label": "fundAmount",
                "type": "t_uint256"
              },
              {
                "label": "usdAmount",
                "type": "t_uint256"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              },
              {
                "label": "usdTransferred",
                "type": "t_bool"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_array(t_struct(Checkpoint)1329_storage)dyn_storage)": {
            "label": "mapping(address => struct ERC20VotesUpgradeable.Checkpoint[])"
          },
          "t_array(t_struct(Checkpoint)1329_storage)dyn_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)1329_storage": {
            "label": "struct ERC20VotesUpgradeable.Checkpoint",
            "members": [
              {
                "label": "fromBlock",
                "type": "t_uint32"
              },
              {
                "label": "votes",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          },
          "t_mapping(t_address,t_struct(Counter)2518_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)"
          },
          "t_struct(Counter)2518_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    }
  }
}
