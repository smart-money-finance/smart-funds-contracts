{
  "CustodianUsed": "Custodian is already used for another fund",
  "SenderIsNotFund": "Only callable by funds",
  "ManagerAlreadyWhitelisted": "Manager is already whitelisted",
  "NotWhitelisted": "Not whitelisted as a fund manager",
  "ManagerOnly": "Manager only",
  "WhitelistedOnly": "Whitelisted investors only",
  "AfterDeadline": "Transaction mined after deadline",
  "TooManyInvestors": "Too many investors",
  "AlreadyWhitelisted": "Investor is already whitelisted",
  "InvestorIsActive": "Investor has open investments",
  "NotInvestor": "Investor isn't whitelisted",
  "InvestmentTooSmall": "Investment amount is less than fund's minimum",
  "MinAmountZero": "Minimum amount must be greater than 0",
  "MaxInvestmentsReached": "Investor has reached max investment limit",
  "NotInvestmentOwner": "Investor does not own that investment",
  "InvestmentRedeemed": "Investment already redeemed",
  "InvestmentLockedUp": "Investment is still locked up",
  "NotTransferable": "Token is not transferable",
  "InvalidInvestor": "Custodian can't be investor",
  "InvestmentDeadlineTooShort": "Investment deadline too short",
  "InvestmentNotPending": "Investment request is no longer pending",
  "NotRequestOwner": "Investor doesn't own that request",
  "RequestNotPastDeadline": "Request isn't past deadline",
  "InvestmentAlreadyHasRedemptionRequest": "Investment already has an open redemption request",
  "InsufficientUsdAvailableAndApproved": "Not enough usd tokens available and approved",
  "NotPastFeeTimelock": "Can't withdraw fees yet",
  "InvalidFeeBeneficiary": "Invalid fee beneficiary",
  "InvalidCustodian": "Invalid custodian",
  "InvalidInitialInvestor": "Initial investor must be set if initial AUM is not 0",
  "AumUpdaterOnly": "AUM updater only",
  "InvestmentRequestsDisabled": "Investment requests are disabled",
  "RedemptionRequestsDisabled": "Redemption requests are disabled",
  "FundClosed": "Fund is closed",
  "InvalidMaxInvestors": "Invalid max investors amount",
  "FeeBeneficiaryNotSet": "Can't withdraw fees until fee beneficiary is set",
  "InvalidFees": "Invalid fees"
}
